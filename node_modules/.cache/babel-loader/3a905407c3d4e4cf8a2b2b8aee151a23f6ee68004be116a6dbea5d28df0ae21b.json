{"ast":null,"code":"var _jsxFileName = \"/Users/aditishrivastava/Desktop/cybr/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [counter, setCounter] = useState(0);\n  const [redGuess, setRedGuess] = useState(0);\n  const [greenGuess, setGreenGuess] = useState(0);\n  const [redReal, setRedReal] = useState(0);\n  const [greenReal, setGreenReal] = useState(0);\n  const [guessList, setGuessList] = useState([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]);\n  const [lightList, setLightList] = useState([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]);\n  const [inputText, setInputText] = useState('');\n  const [textBoxValues, setTextBoxValues] = useState([]);\n  const [correctGreens, setCorrectGreens] = useState([]);\n  const [showBox, setShowBox] = useState(true);\n  const updateLight = value => {\n    const num = Math.random();\n    if (num < 0.7) {\n      lightList[counter] = 1;\n      setRedReal(redReal + 1);\n    } else {\n      lightList[counter] = 0;\n      setGreenReal(greenReal + 1);\n    }\n  };\n  function getGreenGuesses() {\n    let correct = 0;\n    for (let i = 0; i < guessList.length; i++) {\n      if (guessList[i] === lightList[i]) {\n        correct = correct + 1;\n      }\n    }\n    return correct;\n  }\n  function getCounter() {\n    if (counter === 0) {\n      return 0;\n    }\n    if (counter % 20 === 0) {\n      return 20;\n    }\n    return counter % 20;\n  }\n  function reset() {\n    setCounter(0);\n    setGuessList([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]);\n    setLightList([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]);\n    setTextBoxValues(prevTextBoxValues => [...prevTextBoxValues, inputText]);\n    setCorrectGreens(prevGuessGreens => [...prevGuessGreens, getGreenGuesses()]);\n    setShowBox(true);\n    setInputText('');\n  }\n  function getCorrect() {\n    let correct = 0;\n    for (let i = 0; i < guessList.length; i++) {\n      if (guessList[i] === lightList[i] && lightList[i] !== -1) {\n        correct = correct + 1;\n      }\n    }\n    return correct;\n  }\n  function RedPress() {\n    guessList[counter % 20] = 0;\n    updateLight(0);\n    setCounter(counter + 1);\n    setRedGuess(redGuess + 1);\n  }\n  function GetStarted() {\n    setShowBox(false);\n  }\n  function GreenPress() {\n    updateLight(1);\n    setCounter(counter + 1);\n    guessList[counter % 20] = 1;\n    setGreenGuess(greenGuess + 1);\n  }\n  function handleInputChange(event) {\n    setInputText(event.target.value);\n  }\n  const TableComponent = ({\n    list1,\n    list2,\n    list3\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Guessing Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"# of Correct Guesses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list1.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: list2[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [\"` \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Red-Green Guessing Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Try and see if you can guess how often the light turns green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), showBox && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          onChange: handleInputChange,\n          placeholder: \"Name your guessing strategy\",\n          style: {\n            width: '200px',\n            height: '29px',\n            marginRight: '10px',\n            padding: '2px',\n            fontSize: '15px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: inputText !== \"\" && showBox ? /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"rectangleButton\",\n          onClick: GetStarted,\n          children: \"Start this round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 41\n        }, this) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), !showBox && (counter % 20 !== 0 || counter === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"redButton\",\n          onClick: RedPress,\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"greenButton\",\n          onClick: GreenPress,\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), counter !== 0 && counter % 20 === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"rectangleButton\",\n        onClick: reset,\n        children: \"Start the next round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 42\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Guessed Colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rectangleContainer\",\n          children: guessList.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [value === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rectangleRed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 30\n            }, this) : '', value === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rectangleGreen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 30\n            }, this) : '', value === -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rectangleGrey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 31\n            }, this) : '']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Actual Colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rectangleContainer\",\n          children: lightList.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [value === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rectangleRed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 32\n            }, this) : '', value === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rectangleGreen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 32\n            }, this) : '', value === -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rectangleGrey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this) : '']\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Total Guesses: \", getCounter()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Total Correct: \", getCorrect()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Percentage Correct: \", getCorrect() / getCounter() * 100]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(TableComponent, {\n            list1: textBoxValues,\n            list2: correctGreens\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gBu+LGgtu26nm7c8HN7NhtcjqBM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","counter","setCounter","redGuess","setRedGuess","greenGuess","setGreenGuess","redReal","setRedReal","greenReal","setGreenReal","guessList","setGuessList","lightList","setLightList","inputText","setInputText","textBoxValues","setTextBoxValues","correctGreens","setCorrectGreens","showBox","setShowBox","updateLight","value","num","Math","random","getGreenGuesses","correct","i","length","getCounter","reset","prevTextBoxValues","prevGuessGreens","getCorrect","RedPress","GetStarted","GreenPress","handleInputChange","event","target","TableComponent","list1","list2","list3","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","className","style","marginBottom","type","onChange","placeholder","width","height","marginRight","padding","fontSize","id","onClick","align","_c","$RefreshReg$"],"sources":["/Users/aditishrivastava/Desktop/cybr/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [counter, setCounter] = useState(0);\n  const [redGuess, setRedGuess] = useState(0);\n  const [greenGuess, setGreenGuess] = useState(0);\n  const [redReal, setRedReal] = useState(0);\n  const [greenReal, setGreenReal] = useState(0);\n  const [guessList, setGuessList] = useState([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);\n  const [lightList, setLightList] = useState([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);\n  const [inputText, setInputText] = useState(''); \n  const [textBoxValues, setTextBoxValues] = useState([]);\n  const [correctGreens, setCorrectGreens] = useState([]);\n  const[showBox,setShowBox] = useState(true)\n\n  const updateLight = (value) => {\n    const num = Math.random();\n    if (num < 0.7) {\n     lightList[counter] = 1\n      setRedReal(redReal + 1);\n    } else {\n      lightList[counter] = 0\n      setGreenReal(greenReal + 1);\n    }\n  }\n  function getGreenGuesses() {\n    let correct = 0;\n    for (let i = 0; i < guessList.length;i++) {\n      if (guessList[i] === lightList[i]) {\n        correct = correct + 1;\n      }\n    }\n    return correct;\n  }\n  function getCounter() {\n    if (counter === 0) {\n      return 0;\n    }\n    if ((counter%20) === 0) {\n      return 20;\n    }\n    return counter%20\n  }\n  function reset() {\n    setCounter(0);\n    setGuessList([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);\n    setLightList([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);\n    setTextBoxValues((prevTextBoxValues) => [...prevTextBoxValues, inputText])\n    setCorrectGreens((prevGuessGreens)=>[...prevGuessGreens,getGreenGuesses()])\n    setShowBox(true)\n    setInputText('')\n  }\n  function getCorrect() {\n    let correct = 0;\n    for (let i = 0; i < guessList.length;i++) {\n      if (guessList[i] === lightList[i] && lightList[i] !== -1) {\n        correct = correct + 1;\n      }\n    }\n    return correct;\n  }\n\n  function RedPress() {\n    guessList[counter%20] = 0\n    updateLight(0);\n    setCounter(counter + 1);\n    setRedGuess(redGuess + 1);\n\n}\n\n  function GetStarted() {\n    setShowBox(false);\n  }\n  function GreenPress() {\n    updateLight(1);\n    setCounter(counter + 1);\n    guessList[counter%20] = 1\n    setGreenGuess(greenGuess + 1);\n  }\n\n  function handleInputChange(event) {\n    setInputText(event.target.value);\n  }\n  const TableComponent = ({ list1, list2, list3 }) => {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Guessing Name</th>\n            <th># of Correct Guesses</th>\n          </tr>\n        </thead>\n        <tbody>\n          {list1.map((item, index) => (\n            <tr key={index}>\n              <td><b>{item}</b></td>\n              <td><b>{list2[index]}</b></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n  return (\n    <div className=\"App\">\n      <div>\n      <div  style={{ marginBottom: '20px' }}> \n      ` <h2>Red-Green Guessing Game</h2>\n        <h4>Try and see if you can guess how often the light turns green</h4>\n        {showBox && (\n          <input\n            type=\"text\"\n            value={inputText}\n            onChange={handleInputChange}\n            placeholder=\"Name your guessing strategy\"\n            style={{ width: '200px', height: '29px', marginRight: '10px', padding: '2px', fontSize:'15px' }}\n          />\n        )}\n      </div>\n      <div>\n        {inputText !== \"\" && showBox ?  <button id =\"rectangleButton\" onClick={GetStarted}>Start this round</button>: ''}\n      </div>\n      {!showBox && ((counter%20)!==0 || counter === 0) && (\n        <div>\n          <button id=\"redButton\" onClick={RedPress} style={{ marginRight: '10px' }}>Red</button>\n          <button id=\"greenButton\" onClick={GreenPress}>Green</button>\n        </div>\n      )}\n      {counter!==0 && (counter%20)===0 ? <button id =\"rectangleButton\" onClick={reset}>Start the next round</button>: ''}\n      <div>\n        <h3>Guessed Colors</h3>\n        <div className=\"rectangleContainer\">\n          {guessList.map((value, index) => (\n            <li key={index}>\n              {value === 0 ? <div className=\"rectangleRed\"></div> : ''}\n              {value === 1 ? <div className=\"rectangleGreen\"></div> : ''}\n              {value === -1 ? <div className=\"rectangleGrey\"></div> : ''}\n            </li>\n          ))}\n        </div>\n        <h3>Actual Colors</h3>\n          <div className=\"rectangleContainer\">\n            {lightList.map((value, index) => (\n              <li key={index}>\n                {value === 0 ? <div className=\"rectangleRed\" ></div> : ''}\n                {value === 1 ? <div className=\"rectangleGreen\"></div> : ''}\n                {value === -1 ? <div className=\"rectangleGrey\"></div> : ''}\n              </li>\n            ))}\n          </div>\n        <div>\n          <h4>Total Guesses: {getCounter()}</h4>\n          <h4>Total Correct: {getCorrect()}</h4>\n          <h4>Percentage Correct: {(getCorrect()/getCounter())*100}</h4>\n        </div>\n        <div align='center'>\n          <TableComponent list1={textBoxValues} list2={correctGreens}/>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}